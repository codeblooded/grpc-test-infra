name: Go

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Install kubebuilder
        # see kubebuilder book: https://book.kubebuilder.io/quick-start.html
        run: |
          os=$(go env GOOS)
          arch=$(go env GOARCH)
          curl -L https://go.kubebuilder.io/dl/2.3.1/${os}/${arch} | tar -xz -C /tmp/
          sudo mv /tmp/kubebuilder_2.3.1_${os}_${arch} /usr/local/kubebuilder
          export PATH=$PATH:/usr/local/kubebuilder/bin

      - name: Get go dependencies
        run: |
          go get -v -t -d ./...
          go get -v -u golang.org/x/lint/golint
          go get -v -u golang.org/x/tools/cmd/goimports
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Check for format and lint issues
        run: |
          # see https://github.com/golang/go/issues/24230
          fmtcode="$(gofmt -s -d -l .)"
          echo $fmtcode && test -z "$fmtcode"
          lintcode="$(golint ./...)"
          echo $lintcode && test -z "$lintcode"

      - name: Check imports
        run: goimports -l .

      - name: Build
        run: go build ./...

      - name: Vet
        run: go vet -all ./...

      - name: Test
        run: go test -v ./...

      - name: Test race conditions
        run: go test -race ./...

      - name: Test coverage
        run: go test -cover ./...
